
option(FISK_TRACING_ENABLED "Enables performance tracing" ON)

list(APPEND files "Concepts.h")
list(APPEND files "Singleton.h")
list(APPEND files "PlatformDetection.h")
list(APPEND files "DataProcessor.h")
list(APPEND files "ObjectPool.h")
list(APPEND files "Iterators.h")
list(APPEND files "Macros.h")
list(APPEND files "LockedResource.h")
list(APPEND files "Utility.h")
list(APPEND files "MathVector.h")
list(APPEND files "Matrix.h")
list(APPEND files "Shapes.h")

list(APPEND files "Json.h" 						"Json.cpp")
list(APPEND files "File.h" 						"File.cpp")
list(APPEND files "Stream.cpp" 					"Stream.h")
list(APPEND files "StreamWriter.cpp" 			"StreamWriter.h")
list(APPEND files "StreamReader.cpp" 			"StreamReader.h")
list(APPEND files "SystemValues.cpp" 			"SystemValues.h")
list(APPEND files "Event.h" 					"Event.cpp")
list(APPEND files "Logger.cpp" 					"Logger.h")
list(APPEND files "EggClock.cpp" 				"EggClock.h")
list(APPEND files "Trace.cpp" 					"Trace.h")
list(APPEND files "Websocket.cpp" 				"Websocket.h")
list(APPEND files "Base64.cpp" 					"Base64.h")
list(APPEND files "Hexadecimal.cpp" 			"Hexadecimal.h")

list(APPEND files "http/EndPoint.h")
list(APPEND files "http/IConnection.cpp"		"http/IConnection.h")
list(APPEND files "http/Server.cpp" 			"http/Server.h")
list(APPEND files "http/Frame.cpp" 				"http/Frame.h")
list(APPEND files "http/WebsocketEndpoint.cpp" 	"http/WebsocketEndpoint.h")

list(APPEND files "net/Net.h"					"net/WinNet.cpp"				"net/LinuxNet.cpp")
list(APPEND files "net/Socket.h"				"net/WinSocket.cpp"				"net/LinuxSocket.cpp")
list(APPEND files "net/TCPListenSocket.h"		"net/WinTCPListenSocket.cpp"	"net/LinuxTCPListenSocket.cpp")
list(APPEND files "net/TCPSocket.h"				"net/WinTCPSocket.cpp"			"net/LinuxTCPSocket.cpp")

add_library(fisk_tools ${files})

if(FISK_TRACING_ENABLED)
	target_compile_definitions(fisk_tools PUBLIC FISK_TRACING_ENABLED=true)
else()
	target_compile_definitions(fisk_tools PUBLIC FISK_TRACING_ENABLED=false)
endif()

target_include_directories(fisk_tools PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/..)

target_link_libraries(fisk_tools sha1)

if(WIN32)
	target_link_libraries(fisk_tools ws2_32.lib)
endif()